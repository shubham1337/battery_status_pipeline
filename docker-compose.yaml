version: '3'

services:

  # ROS Services
  roscore:
    image: ros:melodic
    networks:
      - ros_net
    command: roscore

  battery_state_publisher:
    build:
      context: ./
      dockerfile: ./rosnode.Dockerfile
    networks:
      - ros_net
    environment:
      - ROS_MASTER_URI=http://roscore:11311
      - ROS_PYTHON_VERSION=3
      - PYTHON_UNBUFFERED=1
    command: bash -c "source /opt/ros/melodic/setup.bash ; source /app/devel/setup.bash ; rosrun battery_status_package publisher.py"

  battery_state_subscriber:
    build:
      context: ./
      dockerfile: ./rosnode.Dockerfile
    networks:
      - ros_net
    environment:
      - ROS_MASTER_URI=http://roscore:11311
      - ROS_PYTHON_VERSION=3
      - PYTHON_UNBUFFERED=1
      - SQLITE_DB_PATH=sqlite:////app/temp/battery_status.db?check_same_thread=False
    volumes:
      - common_db:/app/temp/
    command: bash -c "source /opt/ros/melodic/setup.bash ; source /app/devel/setup.bash ; rosrun battery_status_package subscriber.py"

  cloud_sync:
    build: 
      context: ./
      dockerfile: ./cloud_sync/Dockerfile
    networks:
      - cloud_net
    environment:
      - CLOUD_DB_PATH=postgres://postgres:postgres@cloud_db/postgres
      - SQLITE_DB_PATH=sqlite:////app/temp/battery_status.db?check_same_thread=False
    volumes:
      - common_db:/app/temp/


  # Cloud services
  cloud_db:
    image: postgres
    networks:
      - cloud_net
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

  grafana:
    build: ./grafana/
    ports:
      - 3000:3000
    networks:
      - cloud_net

networks:
  cloud_net:
  ros_net:

volumes:
  common_db:
